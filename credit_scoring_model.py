# -*- coding: utf-8 -*-
"""credit scoring model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kn9Juw4DsNdwpAkj76f6g8ObDZf2ajw0
"""

import pandas as pd
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, roc_auc_score

data = pd.read_csv('/content/CreditScore_test.csv.zip')

data = data.dropna()  # Example for handling missing values
label_encoders = {}
for column in data.select_dtypes(include=['object']).columns:
    label_encoders[column] = LabelEncoder()
    data[column] = label_encoders[column].fit_transform(data[column])

# Feature Scaling
scaler = StandardScaler()
# Check if 'target' exists in the DataFrame. If not, try another column name
# or investigate your data source.
if 'target' in data.columns:
  X = scaler.fit_transform(data.drop('target', axis=1))
  y = data['target']
else:
  print(f"Column 'target' not found. Available columns: {data.columns}")
  # Handle the case where 'target' is not found,
  # e.g., select a different target variable or investigate the data loading process

# Feature Scaling
scaler = StandardScaler()
# Check if 'target' exists in the DataFrame. If not, try another column name
# or investigate your data source.
if 'target' in data.columns:
  X = scaler.fit_transform(data.drop('target', axis=1))
  y = data['target']
else:
  print(f"Column 'target' not found. Available columns: {data.columns}")
  # Handle the case where 'target' is not found,
  # e.g., select a different target variable or investigate the data loading process.
  # Choose a suitable column as the target variable.
  # Replace 'x001' with the actual target column name from the available columns
  target_column = 'x001'
  if target_column in data.columns:
    X = scaler.fit_transform(data.drop(target_column, axis=1))
    y = data[target_column]
  else:
    raise ValueError(f"Target column '{target_column}' not found in the dataset.")

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# prompt: model training

# Model Training
model = RandomForestClassifier()
model.fit(X_train, y_train)

# prompt: model evaluation

# Model Evaluation
y_pred = model.predict(X_test)

# Accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Classification Report
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# ROC AUC Score (if applicable for binary classification)
if len(set(y_test)) == 2:
    roc_auc = roc_auc_score(y_test, model.predict_proba(X_test)[:, 1])
    print("\nROC AUC Score:", roc_auc)